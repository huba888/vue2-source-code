{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 对模板进行编译处理\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //<div\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // </div>\r\n// 匹配属性 name = 123 name = \"123\" name = '123'\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)+|([^'])'+|([^\\s\"'=<>`]+)))?/\r\n// <div> <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/\r\n// {{ name }}\r\nexport function parseHTML(html) { \r\n    function advance(n){\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if(start){\r\n            const match = {\r\n                tagName:start[1], // 标签名字\r\n                attrs:[]\r\n            }\r\n            advance(start[0].length)\r\n            // 如果不是开始标签的结束,就一直匹配下去\r\n            let attr,end\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\r\n                advance(attr[0].length)\r\n                match.attrs.push({name:attr[1],value:attr[3] || attr[4] || attr[5]} || true)\r\n            }\r\n            if(end){\r\n                advance(end[0].length)\r\n            }\r\n            // console.log(match)\r\n            return match\r\n        }\r\n        // 不是开始标签 可能 是一个结束标签\r\n        return false\r\n    }\r\n    let stack = []\r\n    let currentParent;\r\n    let root;\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3\r\n    function createASTElement(tag,attrs){\r\n        return {\r\n            tag,\r\n            attrs,\r\n            type:ELEMENT_TYPE,\r\n            parent:null,\r\n            children:[]\r\n        }\r\n    }\r\n    function start(tag,attrs){\r\n        let node = createASTElement(tag,attrs)\r\n        if(!root){\r\n            root = node\r\n        }\r\n        if(currentParent){\r\n            currentParent.children.push(node)\r\n            node.parent = currentParent\r\n        }\r\n        currentParent = node\r\n        stack.push(node)\r\n    }\r\n    function chars(text){\r\n        // text = text.replace(/\\s{2,}/g,\" \")\r\n        text = text.replace(/\\s/g,\"\")\r\n        text && currentParent.children.push({\r\n            type:TEXT_TYPE,\r\n            text\r\n        })\r\n    }\r\n    function end () {\r\n        let node = stack.pop() // 这里可以检验标签的合法性\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n    // 如果textEnd = 0 说明是一个开始标签 或者 是一个结束标签\r\n    // 如果textEnd > 0 说明是文本的接触位置\r\n    while(html){\r\n        let textEnd = html.indexOf(\"<\")\r\n        if(textEnd == 0){\r\n            // 可能是开始标签\r\n            const startTagMatch = parseStartTag() // 开始标签的\r\n            if(startTagMatch) { // 解析到的开始标签\r\n                start(startTagMatch.tagName,startTagMatch.attrs)\r\n                continue\r\n            }\r\n            // 可能是结束标签\r\n            const endTagMatch = html.match(endTag)\r\n            if(endTagMatch){\r\n                end()\r\n                advance(endTagMatch[0].length)\r\n                continue\r\n            }\r\n        }\r\n        // 文本\r\n        if(textEnd > 0){\r\n            let text = html.substring(0,textEnd) // 解析到的文本\r\n            if(text){\r\n                chars(text)\r\n                advance(text.length)\r\n            }\r\n        }\r\n    }\r\n    return root\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nexport function compileToFunction (template) {\r\n    // 1.将template 进行 转换为 Ast 语法树\r\n    const ast = parseHTML(template)\r\n    // 2.生成 render方法 (render方法返回的结果就是 虚拟DOM)\r\n    // code = _c(\"div\",{id:\"app\"},_c(\"div\",{name:\"huba\"},_v(_s(name)+\"hello\")))\r\n    let code = codegen(ast)\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code)\r\n    return render\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nfunction gen(node){\r\n    // 如果是元素\r\n    if(node.type === 1){\r\n        return codegen(node)\r\n    }else {\r\n        // 文本\r\n        let text = node.text\r\n        if(!defaultTagRE.test(text)){\r\n            // 纯文本\r\n            return `_v(${JSON.stringify(text)})` \r\n        }else {\r\n            // {{name}}  _v(_s(name) + \"hello\" + _s(name))\r\n            const tokens = []\r\n            let match;\r\n            defaultTagRE.lastIndex = 0\r\n            let lastIndex = 0\r\n            while(match = defaultTagRE.exec(text)){\r\n                let index = match.index; // 匹配的位置\r\n                if(index > lastIndex){\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join(\"+\")})`\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children){\r\n    return children.map(child => gen(child)).join(\",\")\r\n}\r\n\r\nfunction getProps(attrs){\r\n    let str = ``// {name,value}\r\n    for(let i = 0;i<attrs.length;i++){\r\n        let attr = attrs[i]\r\n        if(attr.name == \"style\"){\r\n            let obj = {}\r\n            attr.value.split(\";\").forEach(item => {\r\n                let [key,value] = item.split(\":\")\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0,-1)}}`\r\n}\r\n\r\nfunction codegen(ast){\r\n    let children = genChildren(ast.children)\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? getProps(ast.attrs) : \"null\"}${ast.children.length ? `,${children}`:\"\"})`)\r\n    return code\r\n}","// h() _c()\r\n// 创建元素的虚拟节点\r\nexport function createElementVNode(vm,tag,data = {},...children){\r\n    if(data == null){\r\n        data ={}\r\n    }\r\n    let key = data.key\r\n    if(key){\r\n        delete data.key\r\n    }\r\n    return vnode(vm,tag,key,data,children)\r\n}\r\n// _v()\r\n// 创建元素的虚拟节点\r\nexport function createTextVNode(vm,text){\r\n    return vnode(vm,undefined,undefined,undefined,undefined,text)\r\n}\r\n// 那不是和ast差不多了吗？\r\n// ast 做的是语法层面的转换,他描述的是语法本身（ast 可以描述js css html）等等\r\n// vnode 虚拟节点 描述的是dom元素 可以增加一些自定义的元素(描述dom)\r\nfunction vnode(vm,tag,key,data,children,text){\r\n    return {\r\n        vm,tag,key,data,children,text\r\n    }\r\n}","import { createElementVNode, createTextVNode } from \"./vdom\"\r\n// 这个函数有初次渲染的功能,又有更新的功能\r\nfunction createElm(vnode){\r\n    let { tag,data,children,text } = vnode\r\n    if(typeof tag == \"string\"){\r\n        vnode.el = document.createElement(tag) // 这里将真实节点将虚拟节点对应起来 后续如果修改属性\r\n        // 更新属性\r\n        patchProps(vnode.el,data)\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child))\r\n        })\r\n    }else{\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\nfunction patchProps(el,props){\r\n    for(let key in props){\r\n        if(key == \"style\"){\r\n            for(let styleName in props.style){\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        }else {\r\n            el.setAttribute(key,props[key])\r\n        }\r\n    }\r\n}\r\nfunction patch(oldNode,vnode){\r\n    // nodeType是原生的方法 判断是初次渲染还是跟新\r\n    const isRealElement = oldNode.nodeType;\r\n    if(isRealElement){\r\n        // 初次渲染\r\n        const elm = oldNode // 获取真实元素\r\n        const parentElm = elm.parentNode //拿到父元素\r\n        // 通过虚拟DOM生成了真实的DOM\r\n        const newElm = createElm(vnode)\r\n        // console.log(newElm)\r\n        parentElm.insertBefore(newElm,elm.nextSibling)\r\n        // 删除老节点\r\n        parentElm.removeChild(elm)\r\n        return newElm\r\n    }else {\r\n        //diff算法\r\n    }\r\n}\r\nexport function initLifeCycle(Vue){\r\n    // _render == vm.$options.render 执行之后生成虚拟Dom\r\n    Vue.prototype._render = function(){\r\n        let vm = this\r\n        return vm.$options.render.call(vm) // 通过ast语法转换之后生成的render方法\r\n    }\r\n    // 虚拟Dom变为真实Dom的方法\r\n    Vue.prototype._update = function(vnode){\r\n        const el = this.$el\r\n        // patch既有跟新的功能,又有初始化的功能\r\n        this.$el = patch(el,vnode)\r\n     }\r\n    // _c(\"div\",{},...children)\r\n    Vue.prototype._c = function(){\r\n        return createElementVNode(this,...arguments)\r\n    }\r\n    // _v(text)\r\n    Vue.prototype._v = function(){\r\n        return createTextVNode(this,...arguments)\r\n    }\r\n    // 值转字符串\r\n    Vue.prototype._s = function(value){\r\n        if(typeof value !== \"object\") return value\r\n        return JSON.stringify(value)\r\n    }\r\n}\r\n\r\n// 组件的挂载\r\nexport function mountComponnent (vm,el) {\r\n    // 1.调用reander 生成虚拟DOM\r\n    // 2.根据虚拟DOM 生成 真实DOM\r\n    // 3.插入到el元素中\r\n    vm.$el = el\r\n    vm._update(vm._render()) // vm.$options.render() -> 虚拟节点\r\n}\r\n\r\n// Vue的核心流程\r\n// 1.创建了响应式数据\r\n// 2.模板转换为ast\r\n// 3.将ast语法树转为render函数\r\n// 后续数据的更新可以只是执行render函数 (无需再次执行ast的转换)\r\n// render函数会去生成虚拟节点\r\n// 根据生成的虚拟节点创造真实的DOM\r\n","\r\nlet oldArrayProto = Array.prototype\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\nlet methods= [\r\n    \"push\",\"shift\",\"pop\",\"unshift\",\"sort\",\"reverse\",\"splice\"\r\n]\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function(...args){\r\n        // 对函数的一个劫持\r\n        let res = oldArrayProto[method].call(this,...args)\r\n        // 但是..args里面的内容也可能是对象或者是数组 还需要进行观测\r\n        let inserted;\r\n        switch (method) {\r\n            case \"push\":\r\n            case \"unshift\":    \r\n            inserted = args\r\n            case \"splice\":\r\n            inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted){\r\n            // 对新增加的数据再次进行观测\r\n            this.__ob__.observeArray(inserted)\r\n        }\r\n        return res\r\n    }\r\n})","import { newArrayProto } from \"./array\"\r\n\r\nclass Observe {\r\n    constructor(data){\r\n        // Object.defineProperty 执行劫持已经存在的属性(vue2 中会为此单独写一些Api $set $delete)\r\n        // data.__ob__ = this 这样会死循环\r\n        Object.defineProperty(data,\"__ob__\",{\r\n            value:this,\r\n            enumerable:false\r\n        })\r\n        if(Array.isArray(data)){\r\n            // 如果是数组\r\n            Object.setPrototypeOf(data,newArrayProto)\r\n            this.observeArray(data)\r\n        }else {\r\n            // 如果是对象\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data){ // 让这个data循环 // 对对象的一个方法\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\r\n    }\r\n    \r\n    observeArray(data){\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\nexport function defineReactive(target,key,value){\r\n    observe(value)\r\n    Object.defineProperty(target,key,{\r\n        get(){\r\n            return value\r\n        },\r\n        set(newValue){\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n// 观测对象的方法\r\nexport function observe (data) {\r\n    // 只对象进行劫持\r\n    if(typeof data !== \"object\" || data == null){\r\n        return\r\n    }\r\n    if(data.__ob__ instanceof Observe){\r\n        return data.__ob__\r\n    }\r\n    // 如果一个对象被劫持了，那就不需要再次劫持了(要判断一个对象是否被劫持过,用实例来判断对象是否被劫持过)\r\n    new Observe(data)\r\n}  ","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm){\r\n    const opts = vm.$options\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n}\r\nfunction initData(vm){\r\n    let data = vm.$options.data // data可能是函数 也可能是对象\r\n    data = typeof data === \"function\" ? data.call(this) : data\r\n\r\n    // 对数据进行劫持 vue2里面使用了一个api defineProperty\r\n    vm._data = data\r\n    observe(data)\r\n    \r\n    for(const key in data){\r\n        proxy(vm,\"_data\",key)\r\n    }\r\n}\r\nfunction proxy (vm,target,key) {\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[target][key]\r\n        },\r\n        set(newValue){\r\n            vm[target][key] = newValue \r\n        }\r\n    })\r\n}","import { compileToFunction } from \"./compiler\"\r\nimport { mountComponnent } from \"./lifecycle\"\r\nimport { initState } from \"./state\"\r\n\r\n\r\nexport function initMixin(Vue) { // 给Vue 增加init方法的\r\n    Vue.prototype._init = function (options) { // 用于初始化操作\r\n        const vm = this\r\n        vm.$options = options\r\n        // 初始化状态\r\n        initState(vm)\r\n\r\n        // 挂载\r\n        if(options.el){\r\n            vm.$mount(options.el) //数显数据的挂在\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        let ops = vm.$options\r\n        el = document.querySelector(el)\r\n        // 先判断有没有render函数\r\n        // 如果没有 就看一下是否写了template选项 和 有el\r\n        // render > template > el.outerHtml\r\n        let template \r\n        if(!ops.render){\r\n            if(!ops.template && el){ // 没有写模板,但是写了el\r\n                template = el.outerHTML\r\n            }else{\r\n                if(el){\r\n                    template = ops.template\r\n                }\r\n            }\r\n        }\r\n        // 写了template 就用 写了的template\r\n        // template = <div></div>\r\n        if(template && el){\r\n            // 如果有模板 那就进行编译\r\n            let render = compileToFunction(template)\r\n            ops.render = render\r\n        }\r\n        // 最后一定会有一个 ops.render\r\n        mountComponnent(vm,el) // 组件的挂载\r\n    }\r\n}\r\n","import { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\"\r\n\r\nfunction Vue (options){\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue)\r\ninitLifeCycle(Vue)\r\nexport default Vue\r\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","advance","n","substring","parseStartTag","start","match","tagName","attrs","length","attr","end","push","name","value","stack","currentParent","root","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tag","type","parent","children","node","chars","text","replace","pop","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","ast","code","codegen","render","Function","defaultTagRE","gen","test","JSON","stringify","tokens","lastIndex","exec","index","slice","trim","join","genChildren","map","child","getProps","str","i","obj","split","forEach","item","key","createElementVNode","vm","data","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_render","$options","call","_update","$el","_c","arguments","_v","_s","mountComponnent","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","res","inserted","__ob__","observeArray","Observe","defineProperty","enumerable","isArray","setPrototypeOf","walk","keys","defineReactive","observe","target","get","set","newValue","initState","opts","initData","_data","proxy","initMixin","_init","options","$mount","ops","querySelector","outerHTML"],"mappings":"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"}